version: "3.5"

services:
  auth:
    container_name: weatherapp-auth
    image: devopseasylearning/weatherapp-auth
    ports:
      - 8080:8080
    environment:
      - DB_HOST=db
      - DB_PASSWORD=my-secret-pw
    depends_on:
      - weather  
    networks:
      - weathernet
    restart: always

  ui:
    container_name: weatherapp-ui
    image: devopseasylearning/weatherapp-ui
    ports:
      - 3000:3000
    environment:
      - AUTH_HOST=auth
      - WEATHER_HOST=weather
      - AUTH_PORT=8080
      - WEATHER_PORT=5000
      - REDIS_USER=redis
      - REDIS_PASSWORD=redis
    depends_on:
      - auth
    networks:
      - weathernet
    restart: always

  weather:
    container_name: weatherapp-weather
    image: devopseasylearning/weatherapp-weather
    ports:
      - 5000:5000
    environment:
      - APIKEY=ecbc396f46mshb65cbb1f82cf334p1fcc87jsna5e962a3c542
    depends_on:
      - db
      - redis
    networks:
      - weathernet
    restart: always  

  db:
    container_name: weatherapp-db
    image: devopseasylearning/weatherapp-db
    environment:
      - MYSQL_ROOT_PASSWORD=my-secret-pw 
    volumes:
      - db-data:/var/lib/mysql
    ports:
      - 3306:3306
    networks:
      - weathernet
    restart: always

  redis:
    container_name: weatherapp-redis
    image: redis
    networks:
      - weathernet
    environment:
      - REDIS_USER=redis  
      - REDIS_PASSWORD=redis  
    ports:
      - 6379:6379
    volumes:
      - redis-data:/data
    restart: always

networks:
  weathernet:
    driver: bridge

volumes:
  db-data:
  redis-data:




